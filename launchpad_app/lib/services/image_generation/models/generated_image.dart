import 'package:firebase_app_check/firebase_app_check.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:launchpad_app/extensions/json_typedef.dart';
import 'package:launchpad_app/services/image_generation/image_generation_service.dart';

/// Represents an image generated by an AI model.
///
/// This class is used to represent an image generated by an AI model. Currently, images are generated using the
/// Generations API from OpenAI. However, when APIs are publicly available to perform image generation with
/// Google Gemini models, especially those available through the Firebase Gemini service, the backend service will be
/// updated to use Gemini instead.
///
/// Images generated by AI services are stored in a Firebase Storage bucket. This class represents the data for an image
/// that has been generated by an AI model.
class GeneratedImage {
  /// The file name of the image in Firebase Storage. This is simply a random UUID generated by the backend service
  /// when the image was created and saved.
  final String fileName;

  /// Creates a [GeneratedImage].
  GeneratedImage({
    required this.fileName,
  });

  /// Creates a [GeneratedImage] from a JSON object.
  factory GeneratedImage.fromJson(JSONObject json) {
    return GeneratedImage(
      fileName: json['fileName'] as String,
    );
  }

  /// Converts the [GeneratedImage] to a JSON object.
  JSONObject toJson() {
    return {
      'fileName': fileName,
    };
  }

  /// Gets the signed URL for the image.
  Future<String> getImageUrl() async {
    // Get the current user.
    final User user = FirebaseAuth.instance.currentUser!;

    // Get an App Check token.
    final String? appCheckToken = await FirebaseAppCheck.instance.getToken();
    if (appCheckToken == null || appCheckToken.isEmpty) {
      throw Exception('App Check token is null');
    }

    // Create an image generation service.
    final ImageGenerationService imageGenerationService = ImageGenerationService(user);

    // Get the image URL from the JSON object.
    final String url = await imageGenerationService.getImageUrl(
      appCheckToken: appCheckToken,
      fileName: fileName,
    );

    return url;
  }
}
